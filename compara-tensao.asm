;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*              MODIFICAÇÕES PARA USO COM 12F675                   *
;*                FEITAS PELO PROF. MARDSU                         *
;*                    FEVEREIRO DE 2014                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       NOME DO PROJETO                           *
;*                           CLIENTE                               *
;*         DESENVOLVIDO PELA MOSAICO ENGENHARIA E CONSULTORIA      *
;*   VERSÃO: 1.0                           DATA: 17/06/03          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     DESCRIÇÃO DO ARQUIVO                        *
;*-----------------------------------------------------------------*
;*   MODELO PARA O PIC 12F675                                      *
;*                                                                 *
;*                                                                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ARQUIVOS DE DEFINIÇÕES                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#INCLUDE <p12f675.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675

	__CONFIG _BODEN_OFF & _CP_OFF & _PWRTE_ON & _WDT_OFF & _MCLRE_ON & _INTRC_OSC_NOCLKOUT

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    PAGINAÇÃO DE MEMÓRIA                         *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;DEFINIÇÃO DE COMANDOS DE USUÁRIO PARA ALTERAÇÃO DA PÁGINA DE MEMÓRIA
#DEFINE	BANK0	BCF STATUS,RP0	;SETA BANK 0 DE MEMÓRIA
#DEFINE	BANK1	BSF STATUS,RP0	;SETA BANK 1 DE MAMÓRIA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         VARIÁVEIS                               *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DOS NOMES E ENDEREÇOS DE TODAS AS VARIÁVEIS UTILIZADAS 
; PELO SISTEMA

	CBLOCK	0x20	;ENDEREÇO INICIAL DA MEMÓRIA DE
					;USUÁRIO
		W_TEMP		;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	;JUNTO ÀS INTERRUPÇÕES
		DADO		;ARMAZENA O DADO PARA A EEPROM

		;NOVAS VARIÁVEIS

	ENDC			;FIM DO BLOCO DE MEMÓRIA
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                        FLAGS INTERNOS                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS FLAGS UTILIZADOS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         CONSTANTES                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODAS AS CONSTANTES UTILIZADAS PELO SISTEMA
; INICIALIZAÇÃO DA EEPROM, DE ACORDO COM A DESCRIÇÃO NO ARQUIVO "Def_Rega_Formigas.inc"

;A PARTIR DO ENDEREÇO ZERO DA EEPROM, DADOS EM ORDEM ALEATÓRIA
	ORG 0x2100
	DE	0X89,0X1E,0X39,0X9F,0XC2,0X0C,0XAB,0X33,0X63,0XD3,0X95,0X7B,0X38,0XD6,0X1E,0X48
	DE	0XDB,0XD8,0X86,0XFD,0XA5,0XFC,0X0C,0XBE,0X68,0X9B,0XD9,0X10,0XD8,0XEC,0X90,0X91
	DE	0XAA,0XBB,0XCC,0XDD,0XEE,0XF1,0XC9,0X77

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           ENTRADAS                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO ENTRADA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           SAÍDAS                                *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO SAÍDA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       VETOR DE RESET                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	ORG	0x00			;ENDEREÇO INICIAL DE PROCESSAMENTO
	GOTO	INICIO
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    INÍCIO DA INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ENDEREÇO DE DESVIO DAS INTERRUPÇÕES. A PRIMEIRA TAREFA É SALVAR OS
; VALORES DE "W" E "STATUS" PARA RECUPERAÇÃO FUTURA

	ORG	0x04			;ENDEREÇO INICIAL DA INTERRUPÇÃO
	MOVWF	W_TEMP		;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	;COPIA STATUS PARA STATUS_TEMP

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    ROTINA DE INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; AQUI SERÃO ESCRITAS AS ROTINAS DE RECONHECIMENTO E TRATAMENTO DAS
; INTERRUPÇÕES

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                 ROTINA DE SAÍDA DA INTERRUPÇÃO                  *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; OS VALORES DE "W" E "STATUS" DEVEM SER RECUPERADOS ANTES DE 
; RETORNAR DA INTERRUPÇÃO

SAI_INT
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*	            	 ROTINAS E SUBROTINAS                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; CADA ROTINA OU SUBROTINA DEVE POSSUIR A DESCRIÇÃO DE FUNCIONAMENTO
; E UM NOME COERENTE ÀS SUAS FUNÇÕES.
LE_EEPROM
;LER DADO DA EEPROM, CUJO ENDEREÇO É INDICADO EM W
;DADO LIDO RETORNA EM W
	ANDLW	.127		;LIMITA ENDEREÇO MAX. 127
	BANK1				;ACESSO VIA BANK 1
	MOVWF	EEADR		;INDICA O END. DE LEITURA
	BSF		EECON1,RD	;INICIA O PROCESSO DE LEITURA
	MOVF	EEDATA,W	;COLOCA DADO LIDO EM W
	BANK0				;POSICIONA PARA BANK 0
	RETURN

GRAVA_EEPROM
;ESCREVE DADO (DADO) NA EEPROM, CUJO ENDEREÇO É INDICADO EM W
	ANDLW	.127		;LIMITA ENDEREÇO MAX. 127
	BANK1				;ACESSO VIA BANK 1
	MOVWF	EEADR
	MOVF	DADO,W
	MOVWF	EEDATA
	BSF		EECON1,WREN ;HABILITA ESCRITA
	BCF		INTCON,GIE	;DESLIGA INTERRUPÇÕES
	MOVLW	B'01010101'	;DESBLOQUEIA ESCRITA
	MOVWF	EECON2		;
	MOVLW	B'10101010'	;DESBLOQUEIA ESCRITA
	MOVWF	EECON2		;
	BSF		EECON1,WR ;INICIA A ESCRITA
AGUARDA
	BTFSC	EECON1,WR ;TERMINOU?
	GOTO	AGUARDA
	BSF		INTCON,GIE ;HABILITA INTERRUPÇÕES
	BANK0				;POSICIONA PARA BANK 0
	RETURN

SUBROTINA1

	;CORPO DA ROTINA

	RETURN

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIO DO PROGRAMA                          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
INICIO
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	B'00000010'     ;CONFIGURA TODAS AS PORTAS DO GPIO (PINOS) ;SETA A PORTA 1 DO TRISIO COMO ENTRADA
	MOVWF	TRISIO	
	MOVWF	ANSEL 		;DEFINE PORTAS COMO Digital I/O ;CONFIGURA PORTA GP1 COMO ANALÓGICO
	MOVLW	B'00000100'
	MOVWF	OPTION_REG	;DEFINE OPÇÕES DE OPERAÇÃO
	MOVLW	B'00000000'
	MOVWF	INTCON		;DEFINE OPÇÕES DE INTERRUPÇÕES
	BANK0				;RETORNA PARA O BANCO
	MOVLW	B'00000100'	;CONFIG QUE COMPARA GP1 COM Vref E ARMAZENA O RESULTADO EM Cout
	MOVWF	CMCON		;DEFINE O MODO DE OPERAÇÃO DO COMPARADOR ANALÓGICO

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ROTINA PRINCIPAL                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
MAIN
	; A IDEIA DO QUE FOI FEITO NO MAIN É ESCOLHER UM VALOR PARA O VRCON QUE SERÁ COMPARADO COM A ENTRADA GP1
	; A ENTRADA GP1 POR SUA VEZ, TERÁ QUE PASSAR POR UM DIVISOR DE TENSÃO, POIS O VALOR DA TENSÃO DE ENTRADA 
	; É ALTO DEMAIS PARA SER COMPARADO COM A REFERENCIA INTERNA QUE NÃO CHEGA A 5V.
	; OS VALORES DOS RESITORES NO DIVISOR DE TENSÃO SERÁ DE R1=1.8K E R2=1.3K.
	
	;*******   TABELA REAJUSTADA DEVIDO AO USO DO DIVISOR DE TENSÃO EM RELAÇÃO A TENSÃO DE 0V A 5V ******;
	;----------------------------------------------------------------------------------------------------
	;       NOVO VALOR PROPORCIONAL DA TENSÃO V	    	        /  VALOR MOSTRADO NO DISPLAY
	;		 V <0,20833					/	    0
	;	0,20833 (< ou = )V <0,41667				/	    1
	;	0,41667 (< ou = )V <0,62499				/	    2
	;	0,62499 (< ou = )V <0,83332				/	    3
	;	0,83332 (< ou = )V <1,04165				/	    4
	;	1,04165 (< ou = )V <1,24998				/	    5
	;	1,24998 (< ou = )V <1,45831				/	    6
	;	1,45831 (< ou = )V <1,66664				/	    7
	;	1,66664 (< ou = )V <1,87497		      	        /	    8
	;	1,87497 (< ou = )V < ou = ) 2,0833		    	/	    9
	
	;ESCOLHENDO UM VALOR PARA O VRCON, O COMPARADOR VAI COMPARAR A GP1 COM ESSE VALOR, SE FOR MENOR QUE O VALOR REFERENCIA
	;ENTENDE SE QUE A GP1 ESTÁ DENTRO DO INTERVALO, CASO SEJA MAIOR ELE IRÁ COMPARAR COM O PROXIMO INTERVALO.
	
	
	BANK1
	MOVLW B'10100001' ;CONFIGURA OS BITS DO REG VRCON / BIT7 = ENABLE, BIT5 = LOW RANG, BIT<0:3> = VALOR A SER COMPARADO (0,20833 V)
	MOVWF VRCON	  ;MOVE O VALOR DO REG WORK PARA O VRCON  
	BANK0		  ;ACESSA O BANCO 1
	BTFSC CMCON, COUT ;SE O COUT=0, ELE CONTINUA ANALISANDO, SENÃO, ELE DETECTA O INTERVALO E MANDA PRO DISPLAY
	GOTO DISPLAY0	  ;PULA PARA A FUNÇÃO QUE MOSTRA O VALOR NO DISPLAY
	
	BANK1
	MOVLW B'10100010' ;BIT7 = ENABLE, BIT5 = LOW RANG, BIT<0:3> = VALOR A SER COMPARADO (0,41667 V)
	MOVWF VRCON	  ;MOVE O VALOR DO REG WORK PARA O VRCON  
	BANK0		  ;ACESSA O BANCO 1
	BTFSC CMCON, COUT ;SE O COUT=0, ELE CONTINUA ANALISANDO, SENÃO, ELE DETECTA O INTERVALO E MANDA PRO DISPLAY
	GOTO DISPLAY1	  ;PULA PARA A FUNÇÃO QUE MOSTRA O VALOR NO DISPLAY
	
	BANK1
	MOVLW B'10100011' ;BIT7 = ENABLE, BIT5 = LOW RANG, BIT<0:3> = VALOR A SER COMPARADO (0,62499 V)
	MOVWF VRCON	  ;MOVE O VALOR DO REG WORK PARA O VRCON  
	BANK0		  ;ACESSA O BANCO 1
	BTFSC CMCON, COUT ;SE O COUT=0, ELE CONTINUA ANALISANDO, SENÃO, ELE DETECTA O INTERVALO E MANDA PRO DISPLAY
	GOTO DISPLAY2	  ;PULA PARA A FUNÇÃO QUE MOSTRA O VALOR NO DISPLAY
	
	BANK1
	MOVLW B'10100100' ;BIT7 = ENABLE, BIT5 = LOW RANG, BIT<0:3> = VALOR A SER COMPARADO (0,83332 V)
	MOVWF VRCON	  ;MOVE O VALOR DO REG WORK PARA O VRCON  
	BANK0		  ;ACESSA O BANCO 1
	BTFSC CMCON, COUT ;SE O COUT=0, ELE CONTINUA ANALISANDO, SENÃO, ELE DETECTA O INTERVALO E MANDA PRO DISPLAY
	GOTO DISPLAY3	  ;PULA PARA A FUNÇÃO QUE MOSTRA O VALOR NO DISPLAY
	
	BANK1
	MOVLW B'10100101' ;BIT7 = ENABLE, BIT5 = LOW RANG, BIT<0:3> = VALOR A SER COMPARADO (1,04165 V)
	MOVWF VRCON	  ;MOVE O VALOR DO REG WORK PARA O VRCON  
	BANK0		  ;ACESSA O BANCO 1
	BTFSC CMCON, COUT ;SE O COUT=0, ELE CONTINUA ANALISANDO, SENÃO, ELE DETECTA O INTERVALO E MANDA PRO DISPLAY
	GOTO DISPLAY4	  ;PULA PARA A FUNÇÃO QUE MOSTRA O VALOR NO DISPLAY
	
	BANK1
	MOVLW B'10100110' ;BIT7 = ENABLE, BIT5 = LOW RANG, BIT<0:3> = VALOR A SER COMPARADO (1,24998 V)
	MOVWF VRCON	  ;MOVE O VALOR DO REG WORK PARA O VRCON  
	BANK0		  ;ACESSA O BANCO 1
	BTFSC CMCON, COUT ;SE O COUT=0, ELE CONTINUA ANALISANDO, SENÃO, ELE DETECTA O INTERVALO E MANDA PRO DISPLAY
	GOTO DISPLAY5	  ;PULA PARA A FUNÇÃO QUE MOSTRA O VALOR NO DISPLAY
	
	BANK1
	MOVLW B'10100111' ;BIT7 = ENABLE, BIT5 = LOW RANG, BIT<0:3> = VALOR A SER COMPARADO (1,45831 V)
	MOVWF VRCON	  ;MOVE O VALOR DO REG WORK PARA O VRCON  
	BANK0		  ;ACESSA O BANCO 1
	BTFSC CMCON, COUT ;SE O COUT=0, ELE CONTINUA ANALISANDO, SENÃO, ELE DETECTA O INTERVALO E MANDA PRO DISPLAY
	GOTO DISPLAY6	  ;PULA PARA A FUNÇÃO QUE MOSTRA O VALOR NO DISPLAY
	
	BANK1
	MOVLW B'10101000' ;BIT7 = ENABLE, BIT5 = LOW RANG, BIT<0:3> = VALOR A SER COMPARADO (1,66664 V)
	MOVWF VRCON	  ;MOVE O VALOR DO REG WORK PARA O VRCON  
	BANK0		  ;ACESSA O BANCO 1
	BTFSC CMCON, COUT ;SE O COUT=0, ELE CONTINUA ANALISANDO, SENÃO, ELE DETECTA O INTERVALO E MANDA PRO DISPLAY
	GOTO DISPLAY7	  ;PULA PARA A FUNÇÃO QUE MOSTRA O VALOR NO DISPLAY
	
	BANK1
	MOVLW B'10101001' ;BIT7 = ENABLE, BIT5 = LOW RANG, BIT<0:3> = VALOR A SER COMPARADO (1,87497 V)
	MOVWF VRCON	  ;MOVE O VALOR DO REG WORK PARA O VRCON  
	BANK0		  ;ACESSA O BANCO 1
	BTFSC CMCON, COUT ;SE O COUT=0, ELE CONTINUA ANALISANDO, SENÃO, ELE DETECTA O INTERVALO E MANDA PRO DISPLAY
	GOTO DISPLAY8	  ;PULA PARA A FUNÇÃO QUE MOSTRA O VALOR NO DISPLAY
	
	BANK1
	MOVLW B'10101010' ;BIT7 = ENABLE, BIT5 = LOW RANG, BIT<0:3> = VALOR A SER COMPARADO (2,0833 V)
	MOVWF VRCON	  ;MOVE O VALOR DO REG WORK PARA O VRCON  
	BANK0		  ;ACESSA O BANCO 1
	BTFSC CMCON, COUT ;SE O COUT=0, ELE CONTINUA ANALISANDO, SENÃO, ELE DETECTA O INTERVALO E MANDA PRO DISPLAY
	GOTO DISPLAY9	  ;PULA PARA A FUNÇÃO QUE MOSTRA O VALOR NO DISPLAY
	GOTO MAIN

	;ESCOLHENDO UM VALOR PARA O VRCON, O COMPARADOR VAI COMPARAR A GP1 COM ESSE VALOR, SE FOR MENOR QUE O VALOR REFERENCIA
	;ENTENDE SE QUE A GP1 ESTÁ DENTRO DO INTERVALO, CASO SEJA MAIOR ELE IRÁ COMPARAR COM O PROXIMO INTERVALO
	

DISPLAY0	BCF GPIO, GP5	    ;SETA OU ZERA AS SAÍDAS GP0,GP2,GP4,GP5
		BCF GPIO, GP4	    ;DE ACORDO COM O NUMERO QUE SE QUER EM BINÁRIO.
		BCF GPIO, GP2
		BCF GPIO, GP0	    ;E ASSIM SUCESSIVAMENTE NAS LABELS ABAIXO.
		GOTO MAIN
DISPLAY1	BCF GPIO, GP5
		BCF GPIO, GP4
		BCF GPIO, GP2
		BSF GPIO, GP0
		GOTO MAIN
DISPLAY2	BCF GPIO, GP5
		BCF GPIO, GP4
		BSF GPIO, GP2
		BCF GPIO, GP0
		GOTO MAIN
DISPLAY3	BCF GPIO, GP5
		BCF GPIO, GP4
		BSF GPIO, GP2
		BSF GPIO, GP0
		GOTO MAIN
DISPLAY4	BCF GPIO, GP5
		BSF GPIO, GP4
		BCF GPIO, GP2
		BCF GPIO, GP0
		GOTO MAIN
DISPLAY5	BCF GPIO, GP5
		BSF GPIO, GP4
		BCF GPIO, GP2
		BSF GPIO, GP0
		GOTO MAIN
DISPLAY6	BCF GPIO, GP5
		BSF GPIO, GP4
		BSF GPIO, GP2
		BCF GPIO, GP0
		GOTO MAIN
DISPLAY7	BCF GPIO, GP5
		BSF GPIO, GP4
		BSF GPIO, GP2
		BSF GPIO, GP0
		GOTO MAIN
DISPLAY8	BSF GPIO, GP5
		BCF GPIO, GP4
		BCF GPIO, GP2
		BCF GPIO, GP0
		GOTO MAIN
DISPLAY9	BSF GPIO, GP5
		BCF GPIO, GP4
		BCF GPIO, GP2
		BSF GPIO, GP0
		GOTO MAIN




;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       FIM DO PROGRAMA                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	END


	

